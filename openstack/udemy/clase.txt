
====================================
Los 3 modelos del Cloud Computing
====================================

	Capas de IT:
	------------
	application
	data
	runtime
	middleware
	operating system
	hypervisor
	compute 
	storage
	network

	SAAS: Software as a Service
	---------------------------
	Son basicamente las cloud applications: Aplicaciones corriendo en 
	datacenters propietarios de un operador de cloud accedido a traves
	de internet

	Abstrae todas las capas
								+---------------------+
								|  Cloud applications |
								-----------------------
								network-compute-storage
								+---------------------+




	PAAS: Plataform as a Service (redhat openshift)
	---------------------------
	Cloud Development software (paas) para los desarrolladores
	quienes consumen las herramientas desde la nube

	Abstrae las capas: network, storage, compute, hipervisor, operating system,
	middleware, runtime  
								+---------------------+
								|  app |  app |  app  |
								-----------------------
								development enviroment
								+---------------------+
								network-compute-storage
								+---------------------+

	IAAS: Infrastructure as a Service
	----------------------------------
	Abstrae las capas: network, storage, compute, hipervisor, para 
	no tener que meternos con la red, storage, etc...
	El resto de las capas (SO, middleware...) quedan libres de eleccion

								+---------------------+
								|  app |  	  |  app  |
								|  VM  |  	  |  VM   |
								-----------------------
								network-compute-storage
								+---------------------+

Cloud Computing - Caracteristicas
=================================

1. On-demand self-service: Creo que es la caracteristica de poder consumir hard a
peticion de manera automatica sin interaccion humana con el proveedor del servicio.

2. Broad network acces: Acceso a los servicios 

3. Resource pooling: Recursos virtuales, o fisicos pueden ser asignados dinamicamente
de acuerdo a la demanda del consumer. Hay unas ensacion de independencia del lugar
donde se encuentran los recursos asignados. En algun server. Pero se pueden especificar
lugares en otro nivel mas alto de abstraccion: (pais, estado, datacenter....)
	Recursos: memoria, capacidad de procesamiento, storage, ancho de banda

4. Rapid elasticity:  Los recursos pueden ser proveidos automaticamente. Escalar 
hacia afuera/dentro, dependiendo de la demanda

5. Measured service:  Todos los servicios son medidos, controlados, monitoreados y reportados
 y asi te los cobran


====================================
Cloud deployment models
====================================

private: Opera para una sola organizacion, puede ser manejada on/off premise

public: Tiene una infraestructura disponible al publico. Casi seguro que pertenece a una
compa√±ia de cloud

hybrid: 


====================================
OpenStack - 
====================================

Es IaaS. 

Core services:
--------------
Nova: compute
Glance: image
Neutron: networking
Swift: object storage
keystone: identity
cinder: block storage

Optional services: son un monton

Pacstack es una tool que usa modulos de puppet para
desplegar varias partes de RDO en servers pre instalados
por ssh automaticamente











====================================
KeyStone CLI  
====================================


openstack endpoint list

openstack endpoint show 8cb4dbef5f4349bbabb5184d8df653a2
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 8cb4dbef5f4349bbabb5184d8df653a2 |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 6730e07245194a81a52115f8b0a48dcb |
| service_name | keystone                         |
| service_type | identity                         |
| url          | http://192.168.122.32:5000/v3    |
+--------------+----------------------------------+


openstack catalog list

La lista de como cada servicio puede alcanzar otro

| gnocchi    | metric       | RegionOne                                                                       |
|            |              |   internal: http://192.168.122.32:8041                                          |
|            |              | RegionOne                                                                       |
|            |              |   public: http://192.168.122.32:8041                                            |
|            |              | RegionOne                                                                       |
|            |              |   admin: http://192.168.122.32:8041                                             |



openstack project create newproject
openstack project show newproject
openstack project list

# Seteo un atributo del proyecto
openstack project set --description "para testing" newproject 

# Los usuarios deben ser asignados a un proyecto en su creacion. No puede haber
# usuarios sin proyecto
openstack user create --project newproject --password-prompt developer01

openstack role list
# Que roles tiene asignados el usuario enel proyecto
openstack role assignment list --project newproject --user developer01

# Agrego rol member

openstack role add --project newproject --user developer01 _member_

# Buscando los comandos de openstack ... mmmm

openstack command list | grep openstack.identity -A40


====================================
Glance CLI  - Virtual Machine Disks
====================================
https://docs.openstack.org/image-guide/obtain-images.html

Cuando queremos levantar una VM con Nova, no 
instalamos de 0 una imagen del so.

Nova le pide una copia de la imagen a Glance y bootea de ella

Imagenes: raw, ramdisk, vhd, vdi, qcow2, vmdk, ovf


REST API: interfaz de usuario
Glance Domain Controller: Autorizacion, politicas, etc
database:
glance store drivers:
registry layer:

# Buscando los comandos de openstack ... mmmm
openstack command list | grep openstack.image -A 30
openstack image list

# Bajo un cirros
curl -o cirros.img http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img

openstack image create --min-disk 2 --private --disk-format qcow2 --file <image_file> <image_name>

--min-disk 2: Al menos 2G para que la vm arranque
--private: La imagen no es visible fuera de este proyecto
--disk-format qcow2. Esto es que la imagen es qcow2. Tambien se puede pasar una URL y que lo baje!!!!

openstack image [add,remove] project: agrega o quita una imagen de un proyecto

image save: guarda la imagen en un archivo local

===============================
Neutron  - Network Connectivity
===============================


- Rich topologies: multi tier networks
- Technology agnostic

- REST API(RPC): Acepta requests y routea al plugin correspondiente
plugins y agentes de neutron son los que plug/unplugn ports, crear
redes, sub redes, direcciones ip...

Queue: Usa una cola de mensajes para routear la informacion entre neutron
server y varios agentes

MLT Plugin (??)

	____{ DATABASE }
	|
neutron ------ (Queue) ------- [l2 agent]
				  | ---------- [l3 agent]
				  | ---------- [dhcp agent]
				  | ---------- [advanced services]

Base de datos relacional: para mantener el estado
a traves de redes y componentes

l2 agent: levanta puertos y los conecta a la red compartida
l3 agent: provee conexion a diferentes redes (externas)
DHCP server: 
advanced services: Load balance, firewall, vpn, gateway, etc..

 GRE Network Segmentation
VX Lan


L2 Agent:
---------------
- Corre en un nodo de computo
- se comunica con neutron por RPC 
- Observa y notifica cuando se agregan o quitan devices
y configura la red para el device



OV Switch
------------


CLI
----

openstack network agent list
systemctl status neutron-server

# Veo cuantos bridges tengo
ovs-vsctl show 

ovs-vsctl: Maneja el ovs daemon

# creamos una red
openstack network create <name>
# creamos una sub red y la asignamos a la red
openstack subnet create subnet1 --subnet-range 10.5.5.0/24 --dns-nameserver 8.8.8.8 --network intnet




Neutron

openstack network agent list
systemctl status neutron-server
